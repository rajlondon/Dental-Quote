import axios from 'axios';
const baseUrl = 'http://localhost:5000';

// Test user credentials (use one of the test accounts)
const credentials = {
  email: 'admin@mydentalfly.com',
  password: 'Admin123!'
};

async function testBookingAPI() {
  try {
    console.log('=== Testing Booking API ===');
    
    // Step 1: Login to get session cookie
    console.log('Logging in...');
    const loginResponse = await axios.post(`${baseUrl}/api/auth/login`, credentials, {
      withCredentials: true
    });
    
    if (loginResponse.data && loginResponse.data.success && loginResponse.data.user) {
      const user = loginResponse.data.user;
      console.log(`Logged in successfully as ${user.email} (${user.role})`);
      
      // Get the cookies from the response
      const cookies = loginResponse.headers['set-cookie'];
      
      // Step 2: Create a new booking
      console.log('\nCreating a new booking...');
      const bookingData = {
        userId: loginResponse.data.id,  // Set to logged in user id
        clinicId: 1,  // Assuming clinic ID 1 exists
        status: 'pending',
        stage: 'deposit',
        packageName: 'Basic Dental Package',
        notes: 'API test booking',
        bookingReference: null, // Will be generated by server
        depositAmount: 200.00,
        balanceDue: 800.00
      };
      
      const bookingResponse = await axios.post(`${baseUrl}/api/bookings`, bookingData, {
        headers: {
          Cookie: cookies
        },
        withCredentials: true
      });
      
      console.log('Booking created successfully:');
      console.log(JSON.stringify(bookingResponse.data, null, 2));
      
      // Step 3: Fetch all bookings
      console.log('\nFetching all bookings...');
      const getAllResponse = await axios.get(`${baseUrl}/api/bookings`, {
        headers: {
          Cookie: cookies
        },
        withCredentials: true
      });
      
      console.log(`Retrieved ${getAllResponse.data.length} bookings`);
      
      if (bookingResponse.data && bookingResponse.data.id) {
        // Step 4: Get the booking we just created
        const bookingId = bookingResponse.data.id;
        console.log(`\nFetching booking with ID ${bookingId}...`);
        const getBookingResponse = await axios.get(`${baseUrl}/api/bookings/${bookingId}`, {
          headers: {
            Cookie: cookies
          },
          withCredentials: true
        });
        
        console.log('Retrieved booking:');
        console.log(JSON.stringify(getBookingResponse.data, null, 2));
        
        // Step 5: Update booking status
        console.log(`\nUpdating booking status to 'confirmed'...`);
        const updateStatusResponse = await axios.patch(`${baseUrl}/api/bookings/${bookingId}/status`, {
          status: 'confirmed'
        }, {
          headers: {
            Cookie: cookies
          },
          withCredentials: true
        });
        
        console.log('Updated booking status:');
        console.log(JSON.stringify(updateStatusResponse.data, null, 2));
      }
      
    } else {
      console.error('Login failed:', loginResponse.data);
    }
    
  } catch (error) {
    console.error('Error:', error.message);
    if (error.response) {
      console.error('Response status:', error.response.status);
      console.error('Response data:', error.response.data);
    }
  }
}

// Run the test
testBookingAPI();