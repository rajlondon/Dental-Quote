Issues Found:
1. Duplicate Import Statement
You have the imports duplicated. Remove the old ones:
REMOVE these lines (around line 126-130):
typescriptimport { unifiedPricingEngine } from "@/services/unifiedPricingEngine";
import { quoteStateManager } from "@/services/enhancedQuoteState";
KEEP the ones at the top (around line 38-44) - those are correct.
2. Wrong Interface Definition
You have two conflicting FormValues interfaces:
REMOVE this one (around line 326):
typescriptinterface FormValues {
  treatments: Array<{ treatment: string; quantity: number }>;
  londonConsult: "yes" | "no";
  promoCode?: string; // Add this line
}
INSTEAD, UPDATE the existing z.infer type to include promo code in the Zod schema:
Around line 320, find your formSchema and add the promo code field:
typescriptconst formSchema = z.object({
  name: z.string().min(2, "Name must be at least 2 characters"),
  email: z.string().email("Please enter a valid email address"),
  // ... other fields ...
  budgetRange: z.string().optional(),
  promoCode: z.string().optional(), // Add this line
});
3. Missing Promo Code Form Field
You haven't added the actual promo code input field to your form. Add this after the London consultation section (around line 750):
typescript{/* Promo Code Field - ADD THIS */}
<div className="mb-6">
  <FormField
    control={form.control}
    name="promoCode"
    render={({ field }) => (
      <FormItem>
        <FormLabel className="text-primary font-semibold">
          Promo Code (Optional)
        </FormLabel>
        <FormControl>
          <Input
            placeholder="Enter promo code"
            className="bg-white"
            {...field}
          />
        </FormControl>
        <FormDescription className="text-xs text-neutral-500">
          Enter a valid promo code to receive additional discounts
        </FormDescription>
        <FormMessage />
      </FormItem>
    )}
  />
</div>
4. Missing Promo Code Results Display
You need to add the promo code results display. After your quote calculation in the onSubmit function, you need to store the quoteResult so you can access it in the JSX.
Add this state variable near the top with your other useState declarations:
typescriptconst [quoteResult, setQuoteResult] = useState<any | null>(null);
Then in your onSubmit function, after calculating the quote:
typescript// Store both the compatible result and the original quote result
setQuote(compatibleResult);
setQuoteResult(quoteResult); // Add this line
Then add the promo code display in your quote results section (around line 1100):
typescript{/* ADD THIS BEFORE YOUR EXISTING QUOTE DISPLAY */}
{quoteResult?.promoCode && (
  <div className="bg-green-50 border border-green-200 rounded-lg p-4 mb-4">
    <div className="flex items-center">
      <span className="text-green-800 font-medium">
        ✅ Promo code "{quoteResult.promoCode}" applied!
      </span>
    </div>
    <p className="text-green-700 text-sm mt-1">
      You saved £{quoteResult.promoDiscount.toFixed(2)}
    </p>
  </div>
)}

{quoteResult?.warnings?.length > 0 && (
  <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-4">
    <div className="flex items-center">
      <span className="text-yellow-800 font-medium">⚠️ Notices:</span>
    </div>
    <ul className="text-yellow-700 text-sm mt-1">
      {quoteResult.warnings.map((warning, index) => (
        <li key={index}>• {warning}</li>
      ))}
    </ul>
  </div>
)}
5. Missing Missing Imports
Your file is missing some imports that are needed:
typescript// Add these to your existing imports
import {
  setQuoteData,
  getQuoteData,
  updateQuoteData,
  clearQuoteData,
} from '@/services/enhancedQuoteState';