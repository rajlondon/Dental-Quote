Here's what you need to add:
1. Add Promo Code State and Data Loading
Add this after your existing state declarations (around line 180):
typescript// Add these state variables after your existing useState declarations
const [quoteData, setQuoteData] = useState<any>(null);
const [hasPromoCode, setHasPromoCode] = useState(false);
const [promoCodeInfo, setPromoCodeInfo] = useState<{
  code: string;
  discount: number;
  originalTotal: number;
  clinicId?: number;
} | null>(null);

// Load quote data from localStorage in useEffect
useEffect(() => {
  // Load quote data from localStorage (from PriceCalculator)
  const savedQuoteData = localStorage.getItem("quoteData");
  if (savedQuoteData) {
    try {
      const parsedData = JSON.parse(savedQuoteData);
      setQuoteData(parsedData);
      
      // Check for promo code information
      if (parsedData.promoCode) {
        setHasPromoCode(true);
        setPromoCodeInfo({
          code: parsedData.promoCode,
          discount: parsedData.promoDiscount || 0,
          originalTotal: parsedData.originalTotal || parsedData.totalGBP,
          clinicId: parsedData.clinicId
        });
        
        console.log("Loaded promo code from quote data:", parsedData.promoCode);
      }
    } catch (error) {
      console.error("Error loading quote data:", error);
    }
  }
}, []);
2. Add Helper Function for Clinic Mapping
Add this function before your main component:
typescript// Add this helper function before the YourQuotePage component
const getClinicByPromoCode = (clinicId: number) => {
  const clinics = {
    1: {
      name: "Istanbul Dental Care",
      location: "Maltepe District, Istanbul", 
      rating: "‚≠ê‚≠ê‚≠ê‚≠ê",
      guarantee: "3 Years",
      type: "Affordable"
    },
    2: {
      name: "DentGroup Istanbul", 
      location: "≈ûi≈üli District, Istanbul",
      rating: "‚≠ê‚≠ê‚≠ê‚≠ê¬Ω", 
      guarantee: "5 Years",
      type: "Mid-Tier"
    },
    3: {
      name: "Vera Smile",
      location: "Levent District, Istanbul",
      rating: "‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê",
      guarantee: "10 Years", 
      type: "Premium"
    }
  };
  
  return clinics[clinicId as keyof typeof clinics];
};
3. Replace Your Progress Tracker Section
Replace the existing progress tracker (around line 400) with this enhanced version:
typescript{/* Enhanced Progress tracker with promo code info */}
<div className="mb-8">
  <div className="bg-white rounded-lg shadow-sm p-4">
    {/* Promo Code Success Banner */}
    {hasPromoCode && promoCodeInfo && (
      <div className="bg-green-50 border border-green-200 rounded-lg p-6 mb-6">
        <div className="flex items-center justify-between">
          <div className="flex items-center">
            <div className="bg-green-100 rounded-full p-2 mr-4">
              <CheckCircle className="w-6 h-6 text-green-600" />
            </div>
            <div>
              <h3 className="text-lg font-semibold text-green-800">
                üéâ Promo Code Applied Successfully!
              </h3>
              <p className="text-green-700">
                Code "{promoCodeInfo.code}" - You saved ¬£{promoCodeInfo.discount?.toFixed(2)}
              </p>
            </div>
          </div>
          <div className="text-right">
            <div className="text-sm text-green-600">Original Price</div>
            <div className="text-lg line-through text-gray-500">
              ¬£{promoCodeInfo.originalTotal?.toLocaleString()}
            </div>
            <div className="text-sm text-green-600">Your Price</div>
            <div className="text-2xl font-bold text-green-700">
              ¬£{quoteData?.totalGBP?.toLocaleString()}
            </div>
          </div>
        </div>
      </div>
    )}

    <div className="flex flex-col sm:flex-row items-start sm:items-center justify-between mb-4">
      <div>
        <h2 className="text-xl font-bold">
          {hasPromoCode ? "Your Special Offer Quote" : "Your Quote Progress"}
        </h2>
        <p className="text-gray-600 text-sm">
          {hasPromoCode 
            ? "This quote includes your promo code discount" 
            : "Follow these steps to get your personalized quote"
          }
        </p>
      </div>
      
      {/* Rest of your existing progress tracker code */}
    </div>
    
    {/* Your existing progress grid */}
  </div>
</div>
4. Update Your Clinic Selection Logic
In your clinic selection step (around line 600), add this logic to handle promo code clinic locking:
typescript{/* Step 3: Clinic Selection - Enhanced for promo codes */}
{currentStep === 'select-clinic' && (
  <>
    <Card className="mb-8">
      <CardHeader>
        <CardTitle className="flex items-center text-xl font-bold">
          <MapPin className="mr-2 h-5 w-5 text-blue-500" />
          {hasPromoCode && promoCodeInfo?.clinicId 
            ? "Your Selected Clinic (Promo Code Applied)" 
            : "Select Your Preferred Clinic"
          }
        </CardTitle>
        <CardDescription>
          {hasPromoCode && promoCodeInfo?.clinicId
            ? "This promo code locks you to this specific clinic for the discount."
            : "Choose a clinic that best matches your needs and budget."
          }
        </CardDescription>
      </CardHeader>
      <CardContent>
        {hasPromoCode && promoCodeInfo?.clinicId ? (
          // PROMO CODE APPLIED - Show locked clinic only
          <div className="bg-primary/5 border border-primary rounded-lg p-4">
            <div className="flex items-center justify-between">
              <div className="flex items-center">
                <div className="bg-primary/10 rounded-full p-3 mr-4">
                  <CheckCircle className="w-6 h-6 text-primary" />
                </div>
                <div>
                  <h3 className="text-xl font-semibold text-primary">
                    {getClinicByPromoCode(promoCodeInfo.clinicId)?.name}
                  </h3>
                  <p className="text-gray-600">
                    {getClinicByPromoCode(promoCodeInfo.clinicId)?.location}
                  </p>
                  <div className="flex items-center mt-1">
                    <span className="text-yellow-500 mr-2">
                      {getClinicByPromoCode(promoCodeInfo.clinicId)?.rating}
                    </span>
                    <span className="text-sm text-gray-500">
                      {getClinicByPromoCode(promoCodeInfo.clinicId)?.guarantee} Guarantee
                    </span>
                  </div>
                </div>
              </div>
              <div className="text-right">
                <div className="text-sm text-gray-500">Total Cost</div>
                <div className="text-3xl font-bold text-primary">
                  ¬£{quoteData?.totalGBP?.toLocaleString()}
                </div>
                <div className="text-sm text-green-600">
                  Promo discount applied
                </div>
              </div>
            </div>
            
            <div className="mt-4 bg-white rounded-lg p-3">
              <h4 className="font-semibold text-gray-800 mb-2">What's Included:</h4>
              <ul className="text-sm text-gray-600 space-y-1">
                <li>‚úì All dental treatments listed in your quote</li>
                <li>‚úì Free consultation and treatment planning</li>
                <li>‚úì VIP airport transfers</li>
                <li>‚úì Hotel recommendations</li>
                <li>‚úì 24/7 English-speaking support</li>
                <li>‚úì {getClinicByPromoCode(promoCodeInfo.clinicId)?.guarantee} treatment guarantee</li>
              </ul>
            </div>
            
            <div className="mt-4 p-3 bg-blue-50 rounded-lg border border-blue-200">
              <p className="text-blue-700 text-sm">
                <strong>Note:</strong> This promo code locks you to this specific clinic. 
                To change clinics, you would need to remove the promo code and lose the discount.
              </p>
            </div>
            
            {/* Auto-select this clinic */}
            {(() => {
              // Auto-select the clinic with promo code
              const promoClinic = clinics.find(c => c.id === `clinic-${promoCodeInfo.clinicId}`);
              if (promoClinic && selectedClinic?.id !== promoClinic.id) {
                setSelectedClinic(promoClinic);
              }
              return null;
            })()}
          </div>
        ) : (
          // NO PROMO CODE - Show normal clinic selection
          <div className="space-y-4">
            {/* Your existing clinic selection code */}
            <div className="space-y-6">
              {clinics.map((clinic) => (
                <ClinicCard
                  key={clinic.id}
                  clinic={clinic}
                  isSelected={selectedClinic?.id === clinic.id}
                  onSelect={() => handleClinicSelect(clinic)}
                />
              ))}
            </div>
          </div>
        )}
        
        {/* Navigation buttons */}
        <div className="flex justify-between mt-8">
          <Button
            variant="outline"
            onClick={() => setCurrentStep('patient-info')}
            className="flex items-center gap-2"
          >
            <ArrowLeft className="h-4 w-4" />
            Back to Patient Info
          </Button>
          
          <Button
            onClick={handleConfirmClinic}
            className="flex items-center gap-2"
            disabled={!selectedClinic}
          >
            Continue to Review
            <ChevronRight className="h-4 w-4" />
          </Button>
        </div>
      </CardContent>
    </Card>
  </>
)}
5. Update Your Treatment Summary Table
In your review step (around line 800), enhance the treatment summary to show promo discounts:
typescript{/* Enhanced Treatment Summary with Promo Discount */}
<div>
  <h3 className="font-semibold text-gray-700 mb-3">Treatment Summary</h3>
  <div className="bg-gray-50 p-4 rounded-md">
    {treatmentItems.length > 0 ? (
      <Table>
        <TableHeader>
          <TableRow>
            <TableHead>Treatment</TableHead>
            <TableHead className="text-center">Qty</TableHead>
            <TableHead className="text-right">Unit Price</TableHead>
            <TableHead className="text-right">Subtotal</TableHead>
          </TableRow>
        </TableHeader>
        <TableBody>
          {treatmentItems.map((item) => (
            <TableRow key={item.id}>
              <TableCell className="font-medium">{item.name}</TableCell>
              <TableCell className="text-center">{item.quantity}</TableCell>
              <TableCell className="text-right">¬£{item.priceGBP}</TableCell>
              <TableCell className="text-right">¬£{item.subtotalGBP}</TableCell>
            </TableRow>
          ))}
        </TableBody>
        
        {/* Show subtotal if there's a promo code */}
        {hasPromoCode && promoCodeInfo && (
          <>
            <TableRow className="bg-neutral-50">
              <TableCell colSpan={3} className="text-right font-semibold">
                Treatments Subtotal:
              </TableCell>
              <TableCell className="text-right font-semibold">
                ¬£{promoCodeInfo.originalTotal?.toLocaleString()}
              </TableCell>
            </TableRow>
            
            <TableRow className="bg-green-50">
              <TableCell colSpan={3} className="text-right font-semibold text-green-700">
                Promo Code Discount ({promoCodeInfo.code}):
              </TableCell>
              <TableCell className="text-right font-semibold text-green-700">
                -¬£{promoCodeInfo.discount?.toFixed(2)}
              </TableCell>
            </TableRow>
          </>
        )}
        
        <TableFooter>
          <TableRow>
            <TableCell colSpan={3} className="text-lg font-bold">TOTAL:</TableCell>
            <TableCell className="text-right text-lg font-bold">
              ¬£{quoteData?.totalGBP?.toLocaleString() || formatCurrency(totalGBP)}
            </TableCell>
          </TableRow>
        </TableFooter>
      </Table>
    ) : (
      <p>No treatments added yet.</p>
    )}
  </div>
</div>