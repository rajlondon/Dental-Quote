# Task 3: Admin Promo Manager Implementation

Now that we have the URL auto-apply functionality and database schema in place, let's create an Admin Promo Manager interface that allows the team to create, edit, and manage promotional codes without accessing the database directly.

## 1. Admin Routes & Navigation

1. Add a new route in the Admin section:
   - Add `/admin/promotions` route in your routing configuration
   - Create a new page component: `client/src/pages/admin/PromotionsPage.tsx`

2. Update the Admin navigation menu:
   - Add "Promotions" link in the sidebar navigation
   - Use an appropriate icon (e.g., tag, discount, or gift)

## 2. Promotions List View

Create a table view showing all promotional codes with these columns:
- Code (e.g., "SUMMER50")
- Type (Percentage/Fixed)
- Value (e.g., "25%" or "$50")
- Status (Active/Inactive)
- Expiry Date
- Clinic (if applicable, "All Clinics" if not restricted)
- Usage Count
- Actions (Edit/Deactivate buttons)

Include filtering options:
- Filter by status (Active/Inactive/All)
- Filter by clinic
- Search by code

## 3. Create/Edit Promotion Modal

Create a modal form with these fields:
- Code (text input, required)
- Type (radio buttons: Percentage/Fixed)
- Value (number input, required)
- Expiry Date (date picker)
- Max Uses (number input, optional)
- Clinic Restriction (dropdown, optional)
- Description (text area, optional)
- Status (toggle: Active/Inactive)

## 4. Backend API Endpoints

1. Create these API endpoints:
   - `GET /api/admin/promotions` - List all promotions with filtering
   - `POST /api/admin/promotions` - Create new promotion
   - `GET /api/admin/promotions/:id` - Get promotion details
   - `PUT /api/admin/promotions/:id` - Update promotion
   - `DELETE /api/admin/promotions/:id` - Delete promotion (or deactivate)

2. Create a promotions service file with functions for:
   - Creating promotions
   - Updating promotions
   - Listing promotions with filters
   - Getting usage statistics

## 5. Usage Statistics

Add a simple statistics section showing:
- Total number of active promotions
- Most used promotion code
- Total discount amount applied (optional)

## 6. CSV Export

Add a "Export to CSV" button that generates a CSV file with:
- All promotion details
- Usage statistics per promotion

## Implementation Notes

- Use existing Admin UI components for consistency
- Follow the established pattern for data fetching (React Query preferred)
- Add proper validation for all form fields
- Ensure appropriate admin-only authorization checks
- Add confirmation dialogs for destructive actions