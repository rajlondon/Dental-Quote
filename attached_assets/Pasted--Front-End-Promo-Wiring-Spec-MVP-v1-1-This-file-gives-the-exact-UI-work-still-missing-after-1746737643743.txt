# Front‑End Promo Wiring Spec (MVP v1.1)

*This file gives the **exact** UI work still missing after the back‑end `/api/v1/quotes/from‑promo` endpoint was completed. All SQL, seed data, and back‑end logic already exist and pass the curl tests in **promo\_integration\_spec.md**.*

---

## 0  Context recap

* Clicking a Special Offer / Treatment Package creates a **Quote** that now contains:

  * `quote.id` – UUID
  * `quote.promoId` – FK → `promos.id`
  * `quote.clinicId` – clinic that owns the promo
  * `quote_lines` already include **discounted** lines (`unitPriceGBP`) plus `basePriceGBP` + `isLocked`.
* Front‑end still behaves as if `promoId` didn’t exist, so the user sees all clinics and no discounts.

Goal: When a quote has `promoId ≠ NULL`, the wizard should:

1. Skip multi‑clinic grid and show **one** clinic card with a badge.
2. Display bonus / package lines with strike‑through original price.
3. Prevent deleting locked lines.

---

## 1  Required changes (only three files)

| File                                                                                  | Change                                                                                                                                                                                  |
| ------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| **client/src/contexts/QuoteFlowContext.tsx**                                          | *Persist* `quoteId` from URL on first load and **append `?quoteId=`** to every `navigate(nextPath)` call.                                                                               |
| **client/src/pages/ResultsPage.tsx**                                                  | If `quote.promoId` is truthy → `const clinic = clinics.find(c=>c.id===quote.clinicId)` and render `<SingleClinicCard clinic={clinic} badge={quote.promo.title} />` instead of the grid. |
| **client/src/pages/ReviewPage.tsx** **&** `components/patient/PatientQuoteDetail.tsx` | In row render:                                                                                                                                                                          |

````tsx
{line.basePriceGBP && line.unitPriceGBP < line.basePriceGBP && (
   <del className="text-gray-400 mr-1">£{line.basePriceGBP}</del>
)}
<span>{line.unitPriceGBP===0? 'Included': `£${line.unitPriceGBP}`}</span>
{!line.isLocked && <DeleteIcon onClick={()=>deleteLine(line.id)} />}
``` |

No other files should be touched.

---
## 2  Acceptance tests

### 2.1  Backend sanity (already passes)
```bash
curl -sX POST /api/v1/quotes/from-promo -H "Content-Type: application/json" -d '{"promoId":"PKG_IMPLANT_6"}' > q.json
jq '.quoteId' q.json  # returns a UUID (save as $QID)
curl -s /api/v1/quotes/$QID/lines | jq '.[]|{desc: .description, base:.basePriceGBP, unit:.unitPriceGBP, lock:.isLocked}'
# expect discounted or bonus lines
````

### 2.2  UI flow

1. Open `/wizard/start?quoteId=$QID` → you should *never* see the multi‑clinic grid; instead, a single card with badge “All‑on‑6 Package (30 % off)”.
2. Review page shows original vs discounted price with strike‑through. Delete icon hidden on locked lines.
3. After Finish → Patient Portal quote detail shows same locked, discounted lines.

---

## 3  Deliverables

* Only modify the three files above.
* Ensure TypeScript compiles.
* No changes to database or backend routes.

---

**End of spec – ready for implementation.**
