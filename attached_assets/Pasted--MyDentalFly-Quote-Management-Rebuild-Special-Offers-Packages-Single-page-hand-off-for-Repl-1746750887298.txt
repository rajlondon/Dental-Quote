# MyDentalFly — Quote‑Management Rebuild (Special Offers & Packages)

*Single‑page hand‑off for Replit AI agent – May 2025*

---

## 0  Goal in one sentence

When a visitor clicks a **Special Offer** or **Treatment Package** card on the home page, they go through the normal 6‑step wizard but see **only the linked clinic**, pre‑discounted prices (or bonus £0 line), and those same lines appear—locked—in the Patient & Clinic portals. Marketing & analytics can trace the promo via `promoToken`.

---

## 1  Data Model (Supabase / Drizzle)

```ts
// treatments – master price list
code pk   description   basePriceGBP   basePriceUSD

// packages – discounted bundles per clinic
id pk   clinicId fk clinics.id   title   discountPct   items jsonb   extras jsonb

// offers – bonus incentives per clinic
id pk   clinicId   title   bonusLine jsonb   expires date

// promo_tokens – shareable links
token pk   kind ('package'|'offer')   refId (points to packages.id or offers.id)

// quotes – add promoToken, clinicId, source
... promoToken text null   clinicId text null   source text

// quote_lines – add basePriceGBP & isLocked
... basePriceGBP int null   unitPriceGBP int   isLocked boolean default false
```

---

## 2  Key Endpoint

### `POST /api/v1/quotes/from-promo`

```jsonc
Body:  { "token": "TOK_ALLON6_30", "visitorEmail": "optional" }
Returns: { "quoteId": "q_123" }
```

**Server logic**

1. Validate token & expiry.
2. Insert quote (`promoToken`, `clinicId`, `source='promo'`).
3. If `kind='package'` → insert discounted `quote_lines` from `items[]`, set `isLocked=true`, fill `basePriceGBP`.
   If `kind='offer'`   → insert £0 bonus line (`isLocked=true`).

---

## 3  Front‑End Flow

| Step            | Behaviour                                                                                      |
| --------------- | ---------------------------------------------------------------------------------------------- |
| Home card click | `POST /quotes/from-promo` → `quoteId` → `navigate('/wizard/start?quoteId=…')`                  |
| Wizard          | Keep `quoteId` in URL; if `promoToken` present skip multi‑clinic search.                       |
| Results page    | If `promoToken` present → render **one** card (`quote.clinicId`) with badge `promo.title`.     |
| Review & Portal | For each line show `<del>£base</del> £unit` when discounted; hide delete icon when `isLocked`. |

Reusable React helpers already exist (QuoteFlowContext, useClinics, SingleClinicCard) – only small guards needed.

---

## 4  Milestones / PR sequence

| PR                      | Scope                                                                          | Must pass                            |
| ----------------------- | ------------------------------------------------------------------------------ | ------------------------------------ |
| **#1 Schema & Seed**    | SQL migrations + `scripts/seed.ts` (2 treatments, 1 package, 1 offer, 1 token) | Vitest `schema.test.ts`              |
| **#2 API**              | Implement `/quotes/from-promo` route + unit test                               | `promo-api.test.ts`                  |
| **#3 Wizard & Results** | URL persistence + single‑clinic filter                                         | Playwright `results-filter.spec.ts`  |
| **#4 Review & Portal**  | Strike‑through + lock icon                                                     | Playwright `review-discount.spec.ts` |

*Each PR touches only the necessary files; container must restart (`kill 1`) after merge.*

---

## 5  Tests to include

### `promo-api.test.ts`

```ts
// create quote → expect locked discounted lines
```

### `results-filter.spec.ts`

```ts
// visit /wizard/results?quoteId=xxx → only promo clinic visible
```

### `review-discount.spec.ts`

```ts
// review page shows <del> + £discounted and no delete icon on locked lines
```

---

## 6  Tracking / Emails

*Quotes* table already records `source='promo'` & `promoToken`.
Trigger in `/from-promo` calls SendGrid `promo-welcome` template and fires GTM event `{promoToken}`.

---

## 7  Out of scope for MVP

* Multi‑promo stacking
* Variable‑qty packages
* Refund logic for bonus lines
* Analytics dashboards.

---

*End of spec – hand this file to the Replit agent. Each milestone must go green before moving to the next.*
