File: client/src/components/PriceCalculator.tsx
1. Update the FormValues Interface (Near the top of the file)
Look for where you define your form types/interfaces and add the promo code field:
typescriptinterface FormValues {
  treatments: Array<{ treatment: string; quantity: number }>;
  londonConsult: 'yes' | 'no';
  promoCode?: string; // Add this line
}
2. Add the Promo Code Input Field (In your JSX/Form Section)
Look for your form JSX where you have the London consultation radio buttons, and add the promo code input after that section:
typescript{/* Existing London consultation section */}
<div className="mb-6">
  <label className="block text-sm font-medium text-gray-700 mb-3">
    London Consultation
  </label>
  {/* Your existing radio buttons */}
</div>

{/* ADD THIS NEW SECTION HERE */}
<div className="mb-6">
  <label className="block text-sm font-medium text-gray-700 mb-2">
    Promo Code (Optional)
  </label>
  <input
    type="text"
    {...register('promoCode')}
    placeholder="Enter promo code"
    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
  />
  <p className="text-xs text-gray-500 mt-1">
    Enter a valid promo code to receive additional discounts
  </p>
</div>
3. Update the onSubmit Function
In your onSubmit function, change this line:
typescript// OLD
const quoteResult = await unifiedPricingEngine.calculateQuote(
  data.treatments.map(t => ({ treatment: t.treatment, quantity: t.quantity })),
  undefined, // No promo code for now
  { 
    flightInfo: { city: departureCity, month: travelMonth },
    londonConsult: data.londonConsult === 'yes'
  }
);

// NEW
const quoteResult = await unifiedPricingEngine.calculateQuote(
  data.treatments.map(t => ({ treatment: t.treatment, quantity: t.quantity })),
  data.promoCode, // Pass the promo code here
  { 
    flightInfo: { city: departureCity, month: travelMonth },
    londonConsult: data.londonConsult === 'yes'
  }
);
4. Add Promo Code Results Display (In your Quote Results Section)
Find where you display the quote results and add this before the main quote display:
typescript{/* ADD THIS BEFORE YOUR EXISTING QUOTE DISPLAY */}
{quote && quoteResult?.promoCode && (
  <div className="bg-green-50 border border-green-200 rounded-lg p-4 mb-4">
    <div className="flex items-center">
      <span className="text-green-800 font-medium">
        ✅ Promo code "{quoteResult.promoCode}" applied!
      </span>
    </div>
    <p className="text-green-700 text-sm mt-1">
      You saved £{quoteResult.promoDiscount.toFixed(2)}
    </p>
  </div>
)}

{quote && quoteResult?.warnings?.length > 0 && (
  <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-4">
    <div className="flex items-center">
      <span className="text-yellow-800 font-medium">⚠️ Notices:</span>
    </div>
    <ul className="text-yellow-700 text-sm mt-1">
      {quoteResult.warnings.map((warning, index) => (
        <li key={index}>• {warning}</li>
      ))}
    </ul>
  </div>
)}

{/* Your existing quote display continues here */}
Summary:
All changes go in: client/src/components/PriceCalculator.tsx

Interface update (top of file)
Form input (in the JSX form section)
Function update (in onSubmit)
Results display (in the quote results section)