6.3  Key API Routes
Method	Path	Purpose
POST	/api/plan/from‑package	Creates a new draft quote + treatment line from a homepage package card
GET	/api/plan/:quoteId	Returns full plan lines (patient & clinic)
PATCH	/api/plan/:lineId	Update qty/price/notes (patient edit)
POST	/api/plan/new	Start an empty quote inside portal

All routes use Supabase RLS to ensure only owner or matching clinic can read/write.

6.4  Portal UX
Notification chip on dashboard:
“🎉 ‘Full‑Arch Implant Holiday’ package added to your Draft Plan – Review >”

Click → Treatment Plan page

Table of lines (description, qty, unit, total, package tag)

Edit, Delete, Add Treatment buttons

Sticky CTA: “Request Final Plan from Clinic”

New Quote button in sidebar opens modal → wizard (reuse existing quote flow).

6.5  Acceptance Criteria
Selecting a package on the home page, then authenticating, always results in exactly one draft quote with that package line pref‑illed.

Package line is flagged isPackage = true; clinic sees the same in their portal view.

Patient edits persist immediately (optimistic UI).

Starting “New Quote” does not delete or overwrite the package quote.

yaml
Copy
Edit

---

### 2  Open a new Replit‑agent chat and paste the prompt below

reference_file: docs/01_mvp_spec.md issue: #42 treatment-plan module

Goal: Implement sections 6.2‑6.4 of the spec.

Scope THIS PR:

Backend: Supabase tables treatment_line, package (if not exists), and the three routes in 6.3. Use Typescript types from spec.

Front‑end:

Portal Dashboard chip notification.

/portal/treatment-plan page with editable table (Tailwind, React Hook Form).

“New Quote” modal that calls /api/plan/new then routes to existing quote wizard.

Unit tests for each API route (Vitest).

Constraints:

Follow existing project architecture.

Do NOT touch payment flow or special‑offer logic in this PR.

Return only the updated code files; no explanations.

pgsql
Copy
Edit

---

### 3  Tips for smoother runs

1. **Stick to one issue per chat** – the agent behaves best when laser‑focused.  
2. **Point to the spec every time** (`reference_file: docs/01_mvp_spec.md`).  
3. **Set a 45‑min timer**; if the build still fails, stop the agent, copy the error, and open a fresh chat.

Do that and you’ll get the treatment‑plan functionality wired in with minimal back‑and‑forth. Let me know if you’d like any part of the spec worded differently before you fire it off!





